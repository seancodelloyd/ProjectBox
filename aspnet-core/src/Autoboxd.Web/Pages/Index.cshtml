@page
@using Microsoft.AspNetCore.Mvc.Localization
@using Autoboxd.Localization
@using Volo.Abp.Users
@model Autoboxd.Web.Pages.IndexModel
@inject IHtmlLocalizer<AutoboxdResource> L
@inject ICurrentUser CurrentUser
@section styles {
    <abp-style src="/Pages/Index.css" />
}
@section scripts {
    <abp-script src="/Pages/Index.js" />
}
@if (!CurrentUser.IsAuthenticated)
{
    @await Component.InvokeAsync("HeroImage", new { imageUrl = "/images/hero.jpg" })
}
<div class="container @(!CurrentUser.IsAuthenticated ? "home" : "")">
    @if (!CurrentUser.IsAuthenticated)
    {
        <div class="p-5 text-center">
            <h1 style="font-weight: bold">Track classic automobiles.</h1>
            <h1>Save and list your favourites.</h1>
            <h1>Share your thoughts with the world.</h1>
            <br />

            <a abp-button="Primary" class="register-button" href="~/Account/Register">@L["Button:JoinHere"]</a>
        </div>
    }
    else
    {
        <div class="p-5 text-center">
            <h1>Welcome back @CurrentUser.UserName</h1>
        </div>
    }

    @await Component.InvokeAsync("ContentSection", new { title = "Featured cars", link = "/cars/all" })
    <div class="showcase">
        <div class="row p-3">
            @foreach (var item in Model.FeaturedItems)
            {
                <div class="col-lg-3 col-sm-6 col-12 p-1">@await Component.InvokeAsync("ItemLink", new { imageUrl = "/download/" + item.Path + "-small.jpg", path = "/Cars/" + item.Path, name = item.Name })</div>
            }
        </div>
    </div>

    @await Component.InvokeAsync("ContentSection", new { title = "Recently reviewed", link = "/reviews/all" })
    <div class="grid">
        <div class="row pt-0 pl-3 pr-3 pb-4">
            @foreach (var item in Model.RecentlyReviewed)
            {
                <div class="col-lg-1 col-sm-2 col-3 p-1">
                    <abp-button abp-tooltip="@item.Name" class="button">
                        @await Component.InvokeAsync("ItemLink", new { imageUrl = "/download/" + item.Path + "-tiny.jpg", path = "/Cars/" + item.Path })
                    </abp-button>
                </div>
            }
        </div>
    </div>

    <div class="row">
        <div class="col-lg-7">
            @await Component.InvokeAsync("ContentSection", new { title = "Popular reviews", link = "/reviews/all" })
            @foreach (var review in Model.PopularReviews)
            {
                @await Component.InvokeAsync("ReviewDetails", new
                {
                   imageUrl = "/download/" + review.Item.Path + "-small.jpg",
                   title = review.Title,
                   description = review.Description,
                   path = "/reviews/user/review-name",  // TODO: Change this
                   author = review.Creator?.UserName
                })
            }
        </div>
        <div class="col-lg-5">
            @await Component.InvokeAsync("ContentSection", new { title = "Popular lists", link = "/lists/all" })
            @foreach (var list in Model.PopularLists)
            {
                @await Component.InvokeAsync("ListGrid", new { listDto = list })
            }
        </div>
    </div>
</div>